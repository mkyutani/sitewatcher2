version: "3.7"

services:
  postgres:
    image: postgres:15-bullseye
    hostname: pg
    container_name: sw2pg
    working_dir: /app
    user: "${PG_USER}:${PG_GROUP}"
    environment:
      - "POSTGRES_USER=${PG_USER}"
      - "POSTGRES_PASSWORD=${PG_PASSWORD}"
      - "POSTGRES_DB=${PG_DATABASE}"
      - "PGUSER=${PG_USER}"
      - "PGPASSWORD=${PG_PASSWORD}"
      - "PGDATABASE=${PG_DATABASE}"
    volumes:
      - ./volumes/pg/data:/var/lib/postgresql/data
      - ./volumes/pg/initdb:/docker-entrypoint-initdb.d
      - ./volumes/pg/home:/app
    networks:
      - local-network

  nestjs:
    build:
      context: api
      dockerfile: "Dockerfile"
      target: "${IMAGE_NODE_ENV}"
    hostname: api
    container_name: sw2api
    working_dir: "/app"
#    command: "tail -f /dev/null"
    command: >
      sh -c "
      npm run typeorm:run-migrations &&
      node dist/src/main.js
      "
    depends_on:
      - postgres
    environment:
      - "PORT=${API_PORT}"
      - "PG_USER=${PG_USER}"
      - "PG_PASSWORD=${PG_PASSWORD}"
      - "PG_SERVER=pg"
      - "PG_DATABASE=${PG_DATABASE}"
      - "PG_PORT=${PG_PORT}"
      - "IMAGE_NODE_ENV=${IMAGE_NODE_ENV}"
    ports:
      - "${API_EX_PORT}:${API_PORT}"
    volumes:
      - /app/node_modules
      - ./volumes/api/logs:/logs
    networks:
      - local-network

networks:
  local-network:
    driver: bridge
    name: sw2nw